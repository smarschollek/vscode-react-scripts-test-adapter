{
  "name": "vscode-react-scripts-test-adapter",
  "displayName": "React-scripts Test Adapter",
  "description": "Run your Example tests in the Sidebar of Visual Studio Code",
  "icon": "img/icon.png",
  "author": "Stephan Marschollek <stephan.marschollek@gmail.com>",
  "publisher": "smarschollek",
  "version": "0.1.2",
  "license": "MIT",
  "homepage": "https://github.com/smarschollek/vscode-react-scripts-test-adapter",
  "repository": {
    "type": "git",
    "url": "https://github.com/smarschollek/vscode-react-scripts-test-adapter.git"
  },
  "bugs": {
    "url": "https://github.com/smarschollek/vscode-react-scripts-test-adapter/issues"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "test",
    "testing",
    "react-scripts"
  ],
  "main": "out/main.js",
  "scripts": {
    "clean": "rimraf out *.vsix",
    "build": "npm run -S esbuild-base -- --sourcemap",
    "watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "rebuild": "npm run clean && npm run build",
    "package": "vsce package",
    "publish": "vsce publish",
    "esbuild-base": "rimraf out && esbuild ./src/main.ts --bundle --outfile=out/main.js --external:vscode --external:babel-preset-current-node-syntax --external:./processChild --external:./worker --external:@babel/plugin-syntax-typescript --format=cjs --platform=node",
    "test-compile": "tsc -p ./"
  },
  "dependencies": {
    "jest-editor-support": "30.0.2",
    "vscode-test-adapter-api": "1.9.0",
    "vscode-test-adapter-util": "0.7.1"
  },
  "devDependencies": {
    "tslib": "2.3.1",
    "rimraf": "3.0.2",
    "@types/vscode": "1.63.2",
    "esbuild": "^0.14.18",
    "ts-loader": "9.2.5",
    "typescript": "4.5.5",
    "vsce": "2.6.6",
    "webpack": "5.51.1",
    "webpack-cli": "4.8.0"
  },
  "engines": {
    "vscode": "^1.63.2"
  },
  "extensionDependencies": [
    "hbenl.vscode-test-explorer"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "React-scripts Test Adapter",
      "properties": {
        "reactScriptsTestAdapter.logpanel": {
          "description": "write diagnotic logs to an output panel",
          "type": "boolean",
          "scope": "resource"
        },
        "reactScriptsTestAdapter.logfile": {
          "description": "write diagnostic logs to the given file",
          "type": "string",
          "scope": "resource"
        },
        "reactScriptsTestAdapter.baseGlob": {
          "description": "Glob used specify base for testGlob and watchGlob. Default: src/**/*",
          "type": "string",
          "scope": "resource"
        },
        "reactScriptsTestAdapter.testGlob": {
          "description": "Glob used to find tests files. Default: .test.{js,jsx,ts,tsx}",
          "type": "string",
          "scope": "resource"
        },
        "reactScriptsTestAdapter.watchGlob": {
          "description": "Glob used by the filewatcher. Default: .{js,jsx,ts,tsx}",
          "type": "string",
          "scope": "resource"
        },
        "reactScriptsTestAdapter.debugOutput": {
          "description": "Select the output from the Debug process.",
          "default": "internalConsole",
          "scope": "resource",
          "type": "string",
          "enum": [
            "internalConsole",
            "integratedTerminal",
            "externalTerminal"
          ]
        },
        "reactScriptsTestAdapter.useCraco": {
          "description": "Use craco instead of react-scripts",
          "scope": "resource",
          "type": "boolean"
        },
        "reactScriptsTestAdapter.maxTestRunner": {
          "description": "Maximal amount of child process to run tests",
          "default": 5,
          "minimum": 1,
          "maximum": 50,
          "type": "number",
          "scope": "resource"
        }
      }
    }
  }
}
